/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary.view;

import dictionary.linkedlist.Dictionary_LinkedList;

import java.awt.Color;
import javax.swing.JFrame;

public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    Dictionary_LinkedList DictionaryObj = new Dictionary_LinkedList(); 
    
    public Frame() {
        initComponents();
        DictionaryObj.HardCodeUpdate();
        
        
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Heading = new javax.swing.JLabel();
        SubHeading = new javax.swing.JLabel();
        SearchInput = new javax.swing.JTextField();
        SearchTrigger = new javax.swing.JButton();
        MeaningBlock = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Heading2 = new javax.swing.JLabel();
        WordUpdateInput = new javax.swing.JTextField();
        MeaningUpdateInput = new javax.swing.JTextField();
        UpdateTrigger = new javax.swing.JButton();
        UpdateStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DICTIONARY - Muneeb Ur Rehman B13101079");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Heading.setBackground(new java.awt.Color(255, 255, 255));
        Heading.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        Heading.setForeground(new java.awt.Color(255, 102, 102));
        Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading.setText("DICTIONARY");
        Heading.setAlignmentY(0.0F);

        SubHeading.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        SubHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SubHeading.setText("LINKEDLIST IMPLEMENTATION");

        SearchInput.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        SearchInput.setForeground(new java.awt.Color(153, 153, 153));
        SearchInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SearchInput.setText("Enter Word");
        SearchInput.setToolTipText("Word Tool tip");
        SearchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchInputActionPerformed(evt);
            }
        });

        SearchTrigger.setBackground(new java.awt.Color(255, 255, 255));
        SearchTrigger.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        SearchTrigger.setForeground(new java.awt.Color(153, 153, 153));
        SearchTrigger.setText("SEARCH");
        SearchTrigger.setToolTipText("");
        SearchTrigger.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        SearchTrigger.setContentAreaFilled(false);
        SearchTrigger.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SearchTrigger.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        SearchTrigger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTriggerActionPerformed(evt);
            }
        });

        MeaningBlock.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        MeaningBlock.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MeaningBlock.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));

        Heading2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Heading2.setForeground(new java.awt.Color(102, 102, 102));
        Heading2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading2.setText("UPDATE A WORD");
        Heading2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        WordUpdateInput.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        WordUpdateInput.setForeground(new java.awt.Color(153, 153, 153));
        WordUpdateInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        WordUpdateInput.setText("Enter Word");
        WordUpdateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WordUpdateInputActionPerformed(evt);
            }
        });

        MeaningUpdateInput.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        MeaningUpdateInput.setForeground(new java.awt.Color(153, 153, 153));
        MeaningUpdateInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MeaningUpdateInput.setText("Enter Meaning");
        MeaningUpdateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeaningUpdateInputActionPerformed(evt);
            }
        });

        UpdateTrigger.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        UpdateTrigger.setForeground(new java.awt.Color(102, 102, 102));
        UpdateTrigger.setText("UPDATE");
        UpdateTrigger.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        UpdateTrigger.setContentAreaFilled(false);
        UpdateTrigger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateTriggerActionPerformed(evt);
            }
        });

        UpdateStatus.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Heading2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(UpdateStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UpdateTrigger, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(WordUpdateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MeaningUpdateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Heading2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(WordUpdateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MeaningUpdateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UpdateTrigger, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MeaningBlock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SearchTrigger, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SubHeading))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubHeading)
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchTrigger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(MeaningBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WordUpdateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WordUpdateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WordUpdateInputActionPerformed

    
    //Update Event
    private void UpdateTriggerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateTriggerActionPerformed
        
        String WordUpdateIn = WordUpdateInput.getText();
        String MeanUpdateIn = MeaningUpdateInput.getText();
        
        boolean InsertResult = DictionaryObj.InsertWord(WordUpdateIn, MeanUpdateIn);
        
        if(InsertResult){
            
            UpdateStatus.setText("Update Successful.");
            
        }else UpdateStatus.setText("Update Failed: Invalid Word");
    }//GEN-LAST:event_UpdateTriggerActionPerformed

    
    //Search Event
    private void SearchTriggerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTriggerActionPerformed
        
        
        
        String WordSearchInput = SearchInput.getText();
        
        
        
        String SearchResult = DictionaryObj.SearchWord(WordSearchInput);
        
        if(SearchResult != null){
        
            MeaningBlock.setText(SearchResult);
        
        }else MeaningBlock.setText("Word Not Found");
            
        
        
        
        
    }//GEN-LAST:event_SearchTriggerActionPerformed

    private void SearchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchInputActionPerformed

    private void MeaningUpdateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeaningUpdateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MeaningUpdateInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Heading;
    private javax.swing.JLabel Heading2;
    private javax.swing.JLabel MeaningBlock;
    private javax.swing.JTextField MeaningUpdateInput;
    private javax.swing.JTextField SearchInput;
    private javax.swing.JButton SearchTrigger;
    private javax.swing.JLabel SubHeading;
    private javax.swing.JLabel UpdateStatus;
    private javax.swing.JButton UpdateTrigger;
    private javax.swing.JTextField WordUpdateInput;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
